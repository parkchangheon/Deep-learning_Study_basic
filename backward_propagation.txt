class MulLayer:
    def __init__(self):
        self.x=None
        self.y=None
        
    def forward(self,x,y):
        self.x=x
        self.y=y
        out=x*y
        
        return out
    
    def backward(self,dout):
        dx=dout*self.y
        dy=dout*self.x
        
        return dx,dy


class AddLayer:
    
    def __init__(self):
        pass
    
    def forward(self,x,y):
        out=x+y
        return out
    
    def backward(self,dout):
        dx=dout*1
        dy=dout*1
        
        return dx,dy
    

#example
apple=100
orange=150
apple_num=2
orange_num=3
tax=1.1

mul_apple_layer=MulLayer()
mul_orange_layer=MulLayer()
add_price_layer=AddLayer()
mul_tax_layer=MulLayer()

apple_price=mul_apple_layer.forward(apple,apple_num)
orange_price=mul_orange_layer.forward(orange,orange_num)
price_hap=add_price_layer.forward(apple_price,orange_price)

price_fin=mul_tax_layer.forward(price_hap,tax)

print(price_fin)

dprice=1

dprice_hap,dtax=mul_tax_layer.backward(dprice)
dapple_price,dorange_price=add_price_layer.backward(dprice_hap)
dapple,dapple_num=mul_apple_layer.backward(dapple_price)
dorange,dorange_num=mul_orange_layer.backward(dorange_price)
print(dprice_hap,dtax,dapple_price,dorange_price,dapple,dapple_num,dorange,dorange_num)


# 선형 회귀 

import matplotlib.pyplot as plt 
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras import optimizers
import numpy as np
import keras
from keras import layers
from keras import models

model=models.Sequential()
model.add(layers.Dense(1,input_dim=1))

x=np.array([1,2,3,4,5,6,7,8,9]) #x (시간)
y=np.array([11,22,33,44,53,66,77,87,95]) # x에 대해 매핑된 값(성적)

model=Sequential()
model.add(Dense(1,input_dim=1,activation='linear'))
sgd=optimizers.SGD(lr=0.01) #학습률 을 0.01로 함 =>sgd는 경사하강법
model.compile(optimizer=sgd,loss='mse',metrics=['mse'])#mse 평균오차제곱
model.fit(x,y,batch_size=1,epochs=100,shuffle=False)  #x와y에 대해 오차를 최소화 하는 작업을 300번함



plt.plot(x,model.predict(x),'b',x,y,'k.')

print(model.predict([9.5])) #9시간 반을 공부하면 98.5점을 얻는다고 예측

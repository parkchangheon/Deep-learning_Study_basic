class Relu:
    def __init__(self):
        self.mask=None
        
    def forward(self,x):
        self.mask=(x<=0)
        out=x.copy()
        out[self.mask]=0
        
        return out
    
    def backward(self,dout):
        dout[self.mask]=0
        dx=dout
        
        return dx




def sigmoid(x):
    return 1/(1+np.exp(-x))

class Sig:
    def __init__(self):
        self.out=None
        
    def forward(self,x):
        out=1/(1+np.exp(-x))
        return out
    
    def backward(self,dout):
        dx=dout*(1.0-self.out)*self.out
        
        return dx